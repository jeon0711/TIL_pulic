ml strategy

정확도가 충분치 못할떄
데이터 수집하거나,더 오래 학습시키거나,최적화알고리즘 적용하거나등 여러 방법이 있다.

이런 개선방법이 많아서 뭘 선택하는지가 중요.

직교화:각 조정의 결과가 서로에게 영향을 끼치지 않게하는것.(각 조정하는 벡터가 서로에게 직교하는것.)(다른 차원)

training set costfunction기준 성능 통과(더 큰 네트워크,adam등)
->devset costfunction기준성능통과(정규화,bigger training set등)
->test set기준 costfunction성능통과()
->real world적용의 구조(devset교체나 costfunction교체)

단일 실수평가지표를 사용할것을 권장함
F1score= ave(P and R)
(precesion and recall)
precesion은 인식한 대상중 얼마가 진짜인지
recall은 전체중 얼마가 정확히 인식되었는지

만족지표,최적화지표
만족지표는 어느정도 이상이면 충분한 지표,
최적화지표는 목표값에 가까울수록 좋은 지표

trainig/dev/test distrubution
분포도가 비슷해야함.

개발셋과 목표지표를 결정할때 분포도 자체가 다르면 문제생김.

같은 분포에서 dev,testset이 만들어져야함.

dev,test set 길이.
초기엔 70,30으로(training,test)
혹은 60,20,20으로(training,dev,test)로

근래에는 100만개정도를 다루면 98%traning,1%,1%로 나눔

test set은 충분히 성능평가가 될만큼 크게. 성능평가가 필요없으면 없어도됨.

Metrix(분류기)재설정등이 필요할때:
성능지표상으로는 나은데 실제론 다른 지표가 고려되어야함을 알았을때, 분류기를 재설정하거나
(가중치 지표를 넣는듯(새로운 판단기준의 오류율에서 가중치를 높게줌)) devset이나 traningset을 재설정해야함.
가중치 도입을 위해선 새로운 traning,dev거쳐야함.
원하는 결과 안나오면 이처럼 새로운 평가 지표 넣어야함.

첫째로는 평가지표를 어떻게 구성할지 생각하고(각 지표들을 직교화를 고려해 구해야)
(좀더 정확한건 예전의 머신러닝 수업들은거 복습해라)
그 다음에 실제로 이걸 어떻게 구현할지 생각해라.(즉 이전단계부터 고려하지는 마라)

인간의 오류수준과 비교(대개 베이 오류율에 근접)해서 줄일수 있는 부분을 정한다(분산,편향중)

인간수준 성능이라는건 bayes error를 추정하는 방법이다(최선의 오류값)(적어도 그것보단 낮으니까)

자연 인지되는것(인간에게)은 인간성능을 뛰어넘기 어렵다. 
구조화된, 방대한 데이터를 다루어야하는 경우에 인간성능이상을 뛰어넘는걸 목표로 해볼 수 있다.
물론 음성,이미지인식에서도 그런경우(인간성능이상)가 있으나 구조화된 데이터 다루는 쪽이 가능성있음.

정리하면
training set costfunction기준 성능 통과(더 큰 네트워크,adam등)
->devset costfunction기준성능통과(정규화,bigger training set등)
->test set기준 costfunction성능통과()
->real world적용의 구조(devset교체나 costfunction교체)
여기서
1번째 단계에선 bias를
2번째 단계에선 variance를 줄이는 방식으로 직교화하고

human level과 비교해 traningerror의 줄일수 있는 편향을,dev error와 비교해 줄일수 있는 variance를 구하고
bias를 줄이는건 최적화 알고리즘, 더 큰 모델,NN 구조나 하이퍼 파라미터등 사용.

variance를 줄이는건
더 많은 데이터 얻거나, 정규화(L2,dropout등)
NN구자나 하이퍼파라미터등 사용.

2주차부터